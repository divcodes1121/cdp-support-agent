{
  "url": "https://docs.mparticle.com/integrations/appsflyer/event",
  "title": "Untitled",
  "content": "Home Guides Developers Integrations Changelog Documentation Developers Platform API Overview Accounts Apps Audiences Calculated Attributes Data Points Feeds Field Transformations Services Users Workspaces Data Subject Request API Version 1 and 2 Data Subject Request API Version 3 Warehouse Sync API Overview Warehouse Sync API Tutorial Warehouse Sync API Reference Data Mapping Warehouse Sync SQL Reference Warehouse Sync Troubleshooting Guide ComposeID Warehouse Sync API v2 Migration Calculated Attributes Seeding API Bulk Profile Deletion API Reference Custom Access Roles API Data Planning API Group Identity API Reference Pixel Service Profile API Events API mParticle JSON Schema Reference IDSync AMP SDK Initialization Configuration Network Security Configuration Event Tracking User Attributes IDSync Screen Events Commerce Events Location Tracking Media Kits Application State and Session Management Data Privacy Controls Error Tracking Opt Out Push Notifications WebView Integration Logger Preventing Blocked HTTP Traffic with CNAME Linting Data Plans Troubleshooting the Android SDK API Reference Upgrade to Version 5 Cordova Plugin Identity Direct URL Routing FAQ Web Android iOS Getting Started Usage API Reference Initialization Configuration Event Tracking User Attributes IDSync Screen Tracking Commerce Events Location Tracking Media Kits Application State and Session Management Data Privacy Controls Error Tracking Opt Out Push Notifications Webview Integration Upload Frequency App Extensions Preventing Blocked HTTP Traffic with CNAME Linting Data Plans Troubleshooting iOS SDK Social Networks iOS 14 Guide iOS 15 FAQ iOS 16 FAQ iOS 17 FAQ iOS 18 FAQ API Reference Upgrade to Version 7 Getting Started Identity Media Getting Started Identity Upload Frequency Getting Started Opt Out Initialize the SDK Event Tracking Commerce Tracking Error Tracking Screen Tracking Identity Location Tracking Session Management Getting Started Identity Initialization Configuration Content Security Policy Event Tracking User Attributes IDSync Page View Tracking Commerce Events Location Tracking Media Kits Application State and Session Management Data Privacy Controls Error Tracking Opt Out Custom Logger Persistence Native Web Views Self-Hosting Multiple Instances Web SDK via Google Tag Manager Preventing Blocked HTTP Traffic with CNAME Facebook Instant Articles Troubleshooting the Web SDK Browser Compatibility Linting Data Plans API Reference Upgrade to Version 2 of the SDK Getting Started Identity Web Alexa Android iOS Web mParticle Command Line Interface Linting Tools Smartype Node SDK Go SDK Python SDK Ruby SDK Java SDK Overview Step 1. Create an input Step 2. Verify your input Step 3. Set up your output Step 4. Create a connection Step 5. Verify your connection Step 6. Track events Step 7. Track user data Step 8. Create a data plan Step 9. Test your local app Step 1. Create an input Step 2. Create an output Step 3. Verify output Overview Step 1. Create an input Step 2. Verify your input Step 3. Set up your output Step 4. Create a connection Step 5. Verify your connection Step 6. Track events Step 7. Track user data Step 8. Create a data plan Step 1. Create an input Step 2. Create an output Step 3. Verify output Step 1. Create an input Step 2. Create an output Step 3. Verify output Step 1. Create an input Step 2. Create an output Step 3. Verify output Overview Step 1. Create an input Step 2. Verify your input Step 3. Set up your output Step 4. Create a connection Step 5. Verify your connection Step 6. Track events Step 7. Track user data Step 8. Create a data plan Introduction Outbound Integrations Firehose Java SDK Inbound Integrations Overview Android Kit Integration JavaScript Kit Integration iOS Kit Integration Compose ID Data Hosting Locations Glossary Migrate from Segment to mParticle Migrate from Segment to Client-side mParticle Migrate from Segment to Server-side mParticle Segment-to-mParticle Migration Reference Rules Developer Guide API Credential Management The Developer's Guided Journey to mParticle Guides Create an Input Start capturing data Connect an Event Output Create an Audience Connect an Audience Output Transform and Enhance Your Data Introduction Profiles Audiences Overview Create an Audience Connect an Audience Manage Audiences Real-time Audiences (Legacy) Standard Audiences (Legacy) Calculated Attributes Overview Using Calculated Attributes Create with AI Assistance Calculated Attributes Reference Predictive Audiences Overview Using Predictive Audiences Journeys Overview Manage Journeys Download an audience from a journey Audience A/B testing from a journey Journeys 2.0 What are predictive attributes? Create Future Prediction Use Future Predictions in Campaigns Assess and Troubleshoot Predictions Next Best Action Overview Create a Next Best Action (NBA) View and Manage NBAs Activate Next Best Actions in Campaigns Usage and Billing Report The new mParticle Experience The Overview Map Observability Overview Observability User Guide Observability Troubleshooting Examples Observability Span Glossary Introduction Data Retention Connections Activity Live Stream Data Filter Rules Tiered Events mParticle Users and Roles Analytics Free Trial Troubleshooting mParticle Usage metering for value-based pricing (VBP) Introduction Sync and Activate Analytics User Segments in mParticle User Segment Activation Welcome Page Announcements Project Settings Roles and Teammates Organization Settings Global Project Filters Portfolio Analytics Analytics Data Manager Overview Events Event Properties User Properties Revenue Mapping Export Data UTM Guide Data Dictionary Query Builder Overview Modify Filters With And/Or Clauses Query-time Sampling Query Notes Filter Where Clauses Event vs. User Properties Group By Clauses Annotations Cross-tool Compatibility Apply All for Filter Where Clauses Date Range and Time Settings Overview User Attributes at Event Time Understanding the Screen View Event Analyses Introduction Getting Started Visualization Options For Clauses Date Range and Time Settings Calculator Numerical Settings Assisted Analysis Properties Explorer Frequency in Segmentation Trends in Segmentation Did [not] Perform Clauses Cumulative vs. Non-Cumulative Analysis in Segmentation Total Count of vs. Users Who Performed Save Your Segmentation Analysis Export Results in Segmentation Explore Users from Segmentation Getting Started with Funnels Group By Settings Conversion Window Tracking Properties Date Range and Time Settings Visualization Options Interpreting a Funnel Analysis Group By Filters Conversion over Time Conversion Order Trends Funnel Direction Multi-path Funnels Analyze as Cohort from Funnel Save a Funnel Analysis Explore Users from a Funnel Export Results from a Funnel Getting Started with Cohorts Analysis Modes Save a Cohort Analysis Export Results Explore Users Saved Analyses Manage Analyses in Dashboards Getting Started Event Menu Visualization Ending Event Save a Journey Analysis Getting Started User Activity Timelines Time Settings Export Results Save A User Analysis DashboardsââGetting Started Manage Dashboards Dashboard Filters Organize Dashboards Scheduled Reports Favorites Time and Interval Settings in Dashboards Query Notes in Dashboards User Aliasing The Demo Environment Keyboard Shortcuts Analytics for Marketers Analytics for Product Managers Compare Conversion Across Acquisition Sources Analyze Product Feature Usage Identify Points of User Friction Time-based Subscription Analysis Dashboard Tips and Tricks Understand Product Stickiness Optimize User Flow with A/B Testing User Segments User Segments Export API Dashboard Filter API IDSync Overview Use Cases for IDSync Components of IDSync Store and Organize User Data Identify Users Default IDSync Configuration Profile Conversion Strategy Profile Link Strategy Profile Isolation Strategy Best Match Strategy Aliasing Overview Create and Manage Group Definitions Introduction Catalog Live Stream Data Plans Blocked Data Backfill Guide Warehouse Sync Data Privacy Controls Data Subject Requests Default Service Limits Feeds Cross-Account Audience Sharing Approved Sub-Processors Import Data with CSV Files CSV File Reference Glossary Video Index Single Sign-On (SSO) Setup Examples Debug Console Data Warehouse Delay Alerting Introduction Introduction Introduction Rudderstack Google Tag Manager Segment Advanced Data Warehouse Settings AWS Kinesis (Snowplow) AWS Redshift (Define Your Own Schema) AWS S3 Integration (Define Your Own Schema) AWS S3 (Snowplow Schema) BigQuery (Snowplow Schema) BigQuery Firebase Schema BigQuery (Define Your Own Schema) GCP BigQuery Export Snowflake (Snowplow Schema) Snowplow Schema Overview Snowflake (Define Your Own Schema) REST API Dashboard Filter API (Deprecated) User Segments Export API (Deprecated) SDKs Introduction React Native iOS Android Java JavaScript Python Object API Aliasing Integrations Event Audience Event Event Audience Feed Audience Event Feed Event Cookie Sync Platform SDK Events Server-to-Server Events Audience Audience Audience Event Audience Audience Event Feed Feed Event Event Feed Event Event Audience Data Warehouse Event Audience Event Event Event Audience Event Forwarding Data Subject Requests Audience Event Audience Event Forwarding Data Subject Requests Event Feed Event Event Forwarding Data Subject Requests Feed Event Event Event Feed Event Event Audience Event Audience Event Event Feed Event Feed Forwarding Data Subject Requests Event Forwarding Data Subject Requests Feed Event Audience Feed Forwarding Data Subject Requests Event Event Audience Event Audience Feed Event Feed Audience Event Feed Event Event Audience Feed Event Feed Forwarding Data Subject Requests Event Audience Event Custom Feed Event Feed Audience Event Feed Data Warehouse Event Event Event Audience Audience Audience Audience Event Audience Event Audience Event Audience Event Event Event Event Event Event Feed Feed Audience Audience Audience Audience Event Event Event Audience Event Audience Data Warehouse Event Cookie Sync Audience Event Event Event Event Event Feed Feed Event Event Event Audience Event Audience Event Audience Event Event Audience Feed Event Audience Feed Audience Feed Event Audience Audience Event Event Audience Event Event Event Audience Event Event Forwarding Data Subject Requests Feed Feed Event Feed Audience Audience Event Audience Event Audience Event Event Audience Feed Audience Event Event Audience Audience Audience Audience Event Audience Audience Event Forwarding Data Subject Requests Audience Event Audience Event Feed Event Event Event Audience Event Feed Event Event Audience Event Feed Event Event Event Audience Event Event Audience Event Feed Audience Inbound Data Subject Requests Event Event Feed Event Audience Event Audience Event Audience Event Feed Audience Event Event Event Event Audience Event Feed Audience Event Event Audience Event Event Feed Event Feed Audience Event Audience Event Audience Feed Event Audience Event Event Audience Event Event Event Feed Audience Feed Audience Feed Custom Pixel Feed Event Feed Event Event Event Event Audience Event Event Audience Event Event Event Event Feed Event Data Warehouse Event Audience Audience Feed Event Audience Event Audience Event Feed Loyalty Feed Event Feed Audience Audience Event Audience Audience Audience Cookie Sync Event Feed Audience Audience (Deprecated) Event Audience Migration Audience Event Event Audience Event Audience Event Audience Audience Event Audience Event Event Event Event Cookie Sync Audience Audience Cookie Sync Feed Audience Event Feed Event Event Audience Event Event AppsFlyer is a leading Mobile Attribution & Marketing Analytics platform that allows app marketers to easily measure the performance of all their marketing channels - paid, organic and social - from a single real-time dashboard. mParticleâs integration with AppsFlyer includes a required Kit integration and an optional server-side integration. The Kit forwards event data from your app to AppsFlyer on the client side, and also handles app install attribution, uninstall tracking, and deeplinking, including deferred deeplinking. Supplementary data from outside your app can be forwarded to mParticle via our Events API and sent on to AppsFlyer server-to-server. Consent Google has several notions of user-provided consent. Two of these apply to AppsFlyer events: ad_user_data and ad_personalization. These represent consent for ad user data and ad personalization. User-specified Consent To configure user consent forwarding under this value, a mapping should be set-up leveraging mParticleâs notion of Consent Purposes. To learn more about handling user consent within mParticleâs platform, see the following docs: Data Privacy Controls. Once a Consent Purpose is set up, user consent information can be associated with it in subsequent Event Batches. The Consent Purpose data mapping can then be configured for downstream forwarding via the User Consent Data Mapping connection setting. Consent Defaults In the absence of a user-defined consent value for the ad_user_data and ad_personalization fields via the Consent Purpose mapping, a default value can be optionally configured via a separate drop-down setting for each consent type. When no user consent is provided, the default status is used, if specified. Caution: It is recommended that in the long term, you set up user-specified consent through the Consent Purpose mapping, such that the user consent is correctly forwarded to Google. It is your responsibility as a Data Controller to stay compliant under the GDPR, and set up user consent collection for downstream forwarding. The consent default setting can be deprecated in the future. Enabling AppsFlyer 1. Configure Add the mParticle SDKs to your iOS and/or Android apps. See the docs for your platform here. Connect your iOS and/or Android workspaces to AppsFlyer. You will need to provide your Dev Key, which you can access from the Settings page of your organizationâs AppsFlyer dashboard. For an iOS connection, you will also need your Apple App ID. Make sure you remove the âIDâ prefix. For example, if your App ID is id12345, just enter 12345. For more information on setting up a new mParticle connection, see the Platform Guide. Configuration Settings Connection Settings 2. Add the iOS/Android Kits mParticleâs AppsFlyer integration requires that you add the AppsFlyer Kit to your iOS or Android app. Just by adding the binary to your app: The mParticle SDK will initialize AppsFlyerâs SDK per their documentation, using the AppsFlyer dev key provided above, and will also forward all required UIApplication (iOS) and Activity (Android) lifecycle events to the AppsFlyer SDK. Events that you log via mParticleâs API will be automatically mapped onto AppsFlyer analogous event tracking APIs. The customer ID and email of the current user, set via mParticleâs Identity APIs, will be mapped onto AppsFlyerâs analogous setUser APIs. Google Play Install Referrer will be forwarded (Android only - see below). mParticle publishes the AppsFlyer Kit as separate iOS and Android libraries which have a transitive dependency on the mParticle core libraries. You can add them to your app via Carthage, Cocoapods, Swift Package Manager, or Gradle: Refer to the Apple SDK and Android SDK guides to read more about kits. 3. Install Referrer (Android only) AppsFlyerâs SDK requires the forwarding of the Google Play Install Referrer Intent. The AppsFlyer kit will take care of this for you as long as youâve added mParticleâs ReferrerReceiver to you manifest, or you are manually forwarding the Intent to our ReferrerReceiver class. The mParticle SDK will then forward the Install Referrer intent to each configured kit, including AppsFlyer. Please see the Android SDK setup guide to ensure your manifest is configured properly. Deep Linking and Attribution The AppsFlyer SDK exposes client-side deep linking and attribution APIs, all of which are supported by the mParticle AppsFlyer kit and are covered in this section. The core use-cases are: Retrieving install attribution information (deferred deep linking) Retrieve app-open attribution information (non-deferred deep linking) OneLink, AppsFlyerâs unified deeplinking hosting service Each platform has very specific requirements to ensure that the above functionality is supported. The minimum requirements are: Verify the AppsFlyer connection is enabled for the workspace key and secret, and mParticle environment (development or production) that youâre testing. Verify that the devKey configured above matches your AppsFlyer app. Verify that you have correctly configured your Apple App ID (retrieve from iTunes connect, this is not your iOS development team prefix) both in AppsFlyer and in mParticle. Verify that the proper associated domains and entitlements are configured (iOS only) Verify that your AndroidManifest.xml has the proper Intent Filters to match any deep link domains that youâre testing. Retrieving Attribution Information mParticleâs SDKs will automatically initialize the AppsFlyer SDK, forwarding the required UIApplication lifecycle events and the continueUserAcivity events for iOS and Android, as well as registering a delegate such that you can retrieve deep linking and attribution parameters on the client-side to customize your userâs in-app experience. Specifically, the AppsFlyer SDK exposes one distinct callback: didResolveDeepLink mParticleâs API includes a wrapper for this callback, and both the iOS and Android kits expose a constant to inform you when the callback has been fired and if it was successful. On both platforms, the iOS/Android kit will register a delegate/callback with the AppsFlyer SDK on initialization and for the lifetime of the appâs process, and will call your completion handler block (iOS) or AttributionListener (Android) whenever there is new conversion data available. When a user clicks a OneLink link, the AppsFlyer SDK retrieves available OneLink data from the AppsFlyer servers. Then, the UDL API calls the didResolveDeepLink() method which returns a DeepLinkResult object containing a status and (if successful) a DeepLink object containing the deep_link_value and deep_link_sub1-10 parameters you can use to customize the resulting in-app outcome. However, when users deep link directly using universal or app links, the didResolveDeepLink method returns the full link unparsed since the app opens directly without going through AppsFlyer first. You can read more about AppsFlyerâs deep linking methods here. The parameters returned in these results will match the result of the AppsFlyer SDK, as documented for Android and iOS. See the deep linking documentation for iOS and Android for more information. Test Scenarios The following core test scenarios that should be verified: New user-install (deferred deeplink) Application not running, and an existing user-install invokes a deep link (âcold startâ scenario) Application running in the background, and an existing user install invokes a deep link (âwarm startâ scenario) Track Events The AppsFlyer Kit will forward app events and eCommerce events to AppsFlyer. Custom Mappings are available to map your custom app events onto AppsFlyerâs event names. Refer to the iOS and Android SDK docs for details on instrumenting your app for event tracking: eCommerce iOS SDK Android SDK eCommerce iOS SDK Android SDK App Events iOS SDK Android SDK App Events iOS SDK Android SDK Note that AppsFlyer enforces a limit of 45 characters for event names. Kit Source and Sample Applications The source code for each kit, as well as sample apps, are available on Github: iOS Android Server Integration mParticle can forward app events and commerce events received via our Events API to AppsFlyerâs server-API. Note that AppsFlyer requires data to be linked to a unique AppsFlyer ID, generated client-side by the AppsFlyer Kit. mParticle stores the AppsFlyer ID in its internal user profile. This means that: You must have the AppsFlyer Kit included in your app to be able to forward data, and you can only forward data associated with your app users. The data you send server-side must include a device ID, so that mParticle can lookup the AppsFlyer ID for the user. iOS 14 Update for ApplicationTrackingTransparency For iOS 14, mParticle will send the att field based on the att_authorization_status to AppsFlyer in their expected format. Check the iOS14 Implementation guide for more information. If att_authorization_status is available: CDP mParticle Docs Home Guides Developers Integrations Analytics Analytics Docs Overview Getting Started Developers Expert Training Predictive AI Cortex Docs Overview Getting Started Developers Using Cortex Learn More Blog Podcast Resources Community Change log Get in Touch Help Center Demo Become a Partner",
  "headings": [
    {
      "level": 4,
      "text": "Documentation"
    },
    {
      "level": 2,
      "text": "Developers"
    },
    {
      "level": 2,
      "text": "Guides"
    },
    {
      "level": 2,
      "text": "Integrations"
    },
    {
      "level": 1,
      "text": "Event"
    },
    {
      "level": 2,
      "text": "Consent"
    },
    {
      "level": 3,
      "text": "User-specified Consent"
    },
    {
      "level": 3,
      "text": "Consent Defaults"
    },
    {
      "level": 2,
      "text": "Enabling AppsFlyer"
    },
    {
      "level": 3,
      "text": "1. Configure"
    },
    {
      "level": 4,
      "text": "Configuration Settings"
    },
    {
      "level": 4,
      "text": "Connection Settings"
    },
    {
      "level": 3,
      "text": "2. Add the iOS/Android Kits"
    },
    {
      "level": 3,
      "text": "3. Install Referrer (Android only)"
    },
    {
      "level": 2,
      "text": "Deep Linking and Attribution"
    },
    {
      "level": 3,
      "text": "Retrieving Attribution Information"
    },
    {
      "level": 3,
      "text": "Test Scenarios"
    },
    {
      "level": 2,
      "text": "Track Events"
    },
    {
      "level": 2,
      "text": "Kit Source and Sample Applications"
    },
    {
      "level": 2,
      "text": "Server Integration"
    },
    {
      "level": 3,
      "text": "iOS 14 Update for ApplicationTrackingTransparency"
    },
    {
      "level": 3,
      "text": "CDP"
    },
    {
      "level": 3,
      "text": "Analytics"
    },
    {
      "level": 3,
      "text": "Predictive AI"
    },
    {
      "level": 3,
      "text": "Learn More"
    },
    {
      "level": 3,
      "text": "Get in Touch"
    }
  ],
  "platform": "mparticle"
}